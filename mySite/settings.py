"""
Django settings for mySite project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import re

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-vvb$zec5%gn3u+vj!-#2to_mvah@_)j=@(&eymf+8rymv4%n$z"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
	# "django.contrib.admin",
	# "django.contrib.auth",
	# "django.contrib.contenttypes",
	"django.contrib.sessions",
	# "django.contrib.messages",
	"django.contrib.staticfiles",
	"hotel.apps.HotelConfig",
	"django_bootstrap5",
	"bootstrap_datepicker_plus",
	"captcha",
]

MIDDLEWARE = [
	"django.middleware.security.SecurityMiddleware",
	"django.contrib.sessions.middleware.SessionMiddleware",
	"django.middleware.common.CommonMiddleware",
	"django.middleware.csrf.CsrfViewMiddleware",
	# "django.contrib.auth.middleware.AuthenticationMiddleware",
	# "django.contrib.messages.middleware.MessageMiddleware",
	"django.middleware.clickjacking.XFrameOptionsMiddleware",
	"hotel.middleware.auth.AuthMiddleware",
]

ROOT_URLCONF = "mySite.urls"

TEMPLATES = [
	{
		"BACKEND": "django.template.backends.django.DjangoTemplates",
		"DIRS": [],
		"APP_DIRS": True,
		"OPTIONS": {
			"context_processors": [
				"django.template.context_processors.debug",
				"django.template.context_processors.request",
				# "django.contrib.auth.context_processors.auth",
				# "django.contrib.messages.context_processors.messages",
			],
		},
	},
]

WSGI_APPLICATION = "mySite.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
	"default": {
		"ENGINE": "django.db.backends.mysql",
		"NAME": "hotel",
		"HOST": "YOUR_MYSQL_URL",
		"PORT": "3306",
		"USER": "hotel",
		"PASSWORD": "YOUR_MYSQL_PASSWORD"
	}
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
	},
	{"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
	{"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
	{"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'  # 腾讯QQ邮箱 SMTP 服务器地址
EMAIL_PORT = 25  # SMTP服务的端口号
EMAIL_HOST_USER = '自己的qq邮箱'  # 发送邮件的QQ邮箱
EMAIL_HOST_PASSWORD = '自己的授权码'  # 在QQ邮箱->设置->帐户->“POP3/IMAP......服务” 里得到的在第三方登录QQ邮箱授权码


CAPTCHA_TIMEOUT = 3  # 验证码过期时间，单位为分钟

WHITE_LIST = [
	re.compile(r"^/login/?$"),  # 匹配/login或/login/
	re.compile(r"^/register/?$"),  # 匹配/register或/register/
	re.compile(r"^/logout/?$"),  # 匹配/logout或/logout/
	re.compile(r"^/?$"),  # 匹配/或空字符串
	re.compile(r"^/notice(/\d+)?/?$"),  # 匹配/notice或/notice/或/notice/数字或/notice/数字/
	re.compile(r"^/book/?$"),  # 匹配/book或/book/
	re.compile(r"^/alert/?$"),  # 匹配/alert或/alert/
	"favicon.ico",  # 匹配favicon.ico
	re.compile(r"^/media/.+$"),  # 匹配/media/后面跟着至少一个字符
	re.compile(r"^/captcha/.+$"),  # 匹配/captcha/后面跟着至少一个字符
]
